//输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。
//假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，
//序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。
class Solution {
public:
    bool IsPopOrder(vector<int> pushV,vector<int> popV) {
        // 
        stack<int> S1;
        int st1=0;
        int st2=0;
        while(st1<pushV.size())
        {
            int tmp=pushV[st1];
            S1.push(tmp);
            while(!S1.empty())
            {
                if(S1.top()==popV[st2])
                {
                    st2++;
                    S1.pop();
                }else
                {
                    break;
                }
            }
            st1++;
        }
        if(S1.empty())
        {
            return true;
        }
        return false;
        
    }
};
