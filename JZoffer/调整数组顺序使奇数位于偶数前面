//输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，

//所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。

//实际上是一种排序的思想 
//值得一提的是题目中判断奇偶数我们可以使用位运算判断  n&1 == 0   为偶数 


class Solution {
public:
    void reOrderArray(vector<int> &array) {
       
      int len = array.size();
   
        if(len <= 1){ // 判断特殊情况
            return;
        }
 
        int i = 0;
        while(i < len){
            int j = i + 1;
            if(array[i]%2 == 0){ // a[i]为偶数，j前进，直到替换
            
                while(array[j]%2 == 0){ // j为偶数，前进
                
                    if(j==len-1)// i为偶数，j也为偶数，一直后移到了末尾，证明后面都是偶数
                         return;
                    j++;
                }
                
                // 此时j为奇数
                int count = j-i;
                int temp = array[i];
                array[i] = array[j];
                
                while(count>1){
                    array[i+count] = array[i+count-1];//数组后移
                    count--;
                }
                
                array[i+1] = temp;
            }
            i++;
        }
    }
};
